{
  "dataPrompt": {
    "columns": [{
      "columnId": "9943B780-DD83-4653-951E-F59600194C3C",
      "displayName": "input:",
      "isInput": true
    }, {
      "columnId": "45A7A7C9-B852-4B81-8BA2-A270B6F7075B",
      "displayName": "output:"
    }],
    "rows": [{
      "columnBindings": {
        "9943B780-DD83-4653-951E-F59600194C3C": "Что такое локатор вебэлемента на html странице",
        "45A7A7C9-B852-4B81-8BA2-A270B6F7075B": "# Локаторы полей на `HTML`-странице\n\n### Пример локатора:\n\n```json\n\u0026quot;close_banner\u0026quot;: {\n    \u0026quot;attribute\u0026quot;: null, \n    \u0026quot;by\u0026quot;: \u0026quot;XPATH\u0026quot;,\n    \u0026quot;selector\u0026quot;: \u0026quot;//button[@id \u003d \u0026#39;closeXButton\u0026#39;]\u0026quot;,\n    \u0026quot;if_list\u0026quot;: \u0026quot;first\u0026quot;,\n    \u0026quot;use_mouse\u0026quot;: false,\n    \u0026quot;mandatory\u0026quot;: false,\n    \u0026quot;timeout\u0026quot;: 0,\n    \u0026quot;timeout_for_event\u0026quot;: \u0026quot;presence_of_element_located\u0026quot;,\n    \u0026quot;event\u0026quot;: \u0026quot;click()\u0026quot;,\n    \u0026quot;locator_description\u0026quot;: \u0026quot;Закрываю pop-up окно. Если оно не появилось — не страшно (`mandatory`: `false`).\u0026quot;\n  },\n  \u0026quot;additional_images_urls\u0026quot;: {\n    \u0026quot;attribute\u0026quot;: \u0026quot;src\u0026quot;,\n    \u0026quot;by\u0026quot;: \u0026quot;XPATH\u0026quot;,\n    \u0026quot;selector\u0026quot;: \u0026quot;//ol[contains(@class, \u0026#39;flex-control-thumbs\u0026#39;)]//img\u0026quot;,\n    \u0026quot;if_list\u0026quot;: \u0026quot;all\u0026quot;,\n    \u0026quot;use_mouse\u0026quot;: false,\n    \u0026quot;mandatory\u0026quot;: false,\n    \u0026quot;timeout\u0026quot;: 0,\n    \u0026quot;timeout_for_event\u0026quot;: \u0026quot;presence_of_element_located\u0026quot;,\n    \u0026quot;event\u0026quot;: null,\n    \u0026quot;locator_description\u0026quot;: \u0026quot;Получает список `url` дополнительных изображений.\u0026quot;\n  },\n  \u0026quot;id_supplier\u0026quot;: {\n    \u0026quot;attribute\u0026quot;: \u0026quot;innerText\u0026quot;,\n    \u0026quot;by\u0026quot;: \u0026quot;XPATH\u0026quot;,\n    \u0026quot;selector\u0026quot;: \u0026quot;//span[@class \u003d \u0026#39;ltr sku-copy\u0026#39;]\u0026quot;,\n    \u0026quot;if_list\u0026quot;: \u0026quot;first\u0026quot;,\n    \u0026quot;use_mouse\u0026quot;: false,\n    \u0026quot;mandatory\u0026quot;: true,\n    \u0026quot;timeout\u0026quot;: 0,\n    \u0026quot;timeout_for_event\u0026quot;: \u0026quot;presence_of_element_located\u0026quot;,\n    \u0026quot;event\u0026quot;: null,\n    \u0026quot;locator_description\u0026quot;: \u0026quot;SKU Morlevi.\u0026quot;\n  },\n  \u0026quot;default_image_url\u0026quot;: {\n    \u0026quot;attribute\u0026quot;: null,\n    \u0026quot;by\u0026quot;: \u0026quot;XPATH\u0026quot;,\n    \u0026quot;selector\u0026quot;: \u0026quot;//a[@id \u003d \u0026#39;mainpic\u0026#39;]//img\u0026quot;,\n    \u0026quot;if_list\u0026quot;: \u0026quot;first\u0026quot;,\n    \u0026quot;use_mouse\u0026quot;: false,\n    \u0026quot;timeout\u0026quot;: 0,\n    \u0026quot;timeout_for_event\u0026quot;: \u0026quot;presence_of_element_located\u0026quot;,\n    \u0026quot;event\u0026quot;: \u0026quot;screenshot()\u0026quot;,\n    \u0026quot;mandatory\u0026quot;: true,\n    \u0026quot;locator_description\u0026quot;: \u0026quot;Внимание! В Morlevi картинка получается через screenshot и возвращается как PNG (`bytes`).\u0026quot;\n  }\n```\n\n### Детали:\n\nИмя словаря соответствует имени поля класса `ProductFields` ([подробнее о `ProductFields`](../product/product_fields)).\n\nНапример, локатор `name {}` будет использоваться для получения имени продукта, локатор `price {}` — для получения цены продукта и т.д.\n\n```python\nf \u003d ProductFields(\n    name \u003d d.execute_locator(\u0026#39;name\u0026#39;),\n    price \u003d d.execute_locator(\u0026#39;price\u0026#39;),\n    ...\n)\n```\nКроме того, можно создать свои локаторы для дополнительных действий на странице.\nНапример, `close_banner {}` будет использоваться для закрытия баннера на странице.\n\nСловарь локатора содержит следующие ключи:\n\n- **`attribute`**: Атрибут, который нужно получить от веб-элемента. Например: `innerText`, `src`, `id`, `href` и т.д.  \n  Если установить значение `attribute` в `none/false`, то WebDriver вернёт весь веб-элемент (`WebElement`).\n\n- **`by`**: Стратегия для поиска элемента:  \n  - `ID` соответствует `By.ID`  \n  - `NAME` соответствует `By.NAME`  \n  - `CLASS_NAME` соответствует `By.CLASS_NAME`  \n  - `TAG_NAME` соответствует `By.TAG_NAME`  \n  - `LINK_TEXT` соответствует `By.LINK_TEXT`  \n  - `PARTIAL_LINK_TEXT` соответствует `By.PARTIAL_LINK_TEXT`  \n  - `CSS_SELECTOR` соответствует `By.CSS_SELECTOR`  \n  - `XPATH` соответствует `By.XPATH`\n\n- **`selector`**: Селектор, определяющий способ нахождения веб-элемента. Примеры:  \n  `(//li[@class \u003d \u0026#39;slide selected previous\u0026#39;])[1]//img`,  \n  `//a[@id \u003d \u0026#39;mainpic\u0026#39;]//img`,  \n  `//span[@class \u003d \u0026#39;ltr sku-copy\u0026#39;]`.\n\n- **`if_list`**: Определяет, что делать со списком найденных веб-элементов (`web_element`). Возможные значения:  \n  - `first`: выбрать первый элемент из списка.  \n  - `all`: выбрать все элементы.  \n  - `last`: выбрать последний элемент.  \n  - `even`, `odd`: выбрать чётные/нечётные элементы.  \n  - Указание конкретных номеров, например, `1,2,...` или `[1,3,5]`: выбрать элементы с указанными номерами.  \n\n  Альтернативный способ — указать номер элемента прямо в селекторе, например:  \n  `(//div[contains(@class, \u0026#39;description\u0026#39;)])[2]//p`  \n\n- **`use_mouse`**: `true` | `false`  \n  Используется для выполнения действий с помощью мыши.\n\n- **`event`**: WebDriver может выполнить действие с веб-элементом, например, `click()`, `screenshot()`, `scroll()` и т.д.  \n  **Важно❗**: Если указан `event`, он будет выполнен **до** получения значения из `attribute`.  \n  Например:  \n  ```json\n  {\n      ...\n      \u0026quot;attribute\u0026quot;: \u0026quot;href\u0026quot;,\n      ...\n      \u0026quot;timeout\u0026quot;: 0,\n      \u0026quot;timeout_for_event\u0026quot;: \u0026quot;presence_of_element_located\u0026quot;,\n      \u0026quot;event\u0026quot;: \u0026quot;click()\u0026quot;,\n      ...\n  }\n  ```  \n  В этом случае сначала драйвер выполнит `click()` на веб-элементе, а затем получит его атрибут `href`.  \n  Принцип работы: **действие -\u0026gt; атрибут**.  \n  Еще примеры эвентов:\n   - `screenshot()` возвращает вебэлемент как снимок экрана. Удобно, когда `CDN` сервер не возвращает изображение через `URL`.\n   - `send_message()` - отправляет сообщение вебэлементу.  \n     Я рекомендую отправлять сообщение через переменную `%EXTERNAL_MESSAGE%`, как показано ниже:  \n     ```json\n     {\u0026quot;timeout\u0026quot;: 0, \n     \u0026quot;timeout_for_event\u0026quot;: \u0026quot;presence_of_element_located\u0026quot;, \n     \u0026quot;event\u0026quot;: \u0026quot;click();backspace(10);%EXTERNAL_MESSAGE%\u0026quot;\n     }```\n     \n       \n       ```\n       исполняет последовательность:  \n       \n         click() - нажимает на вебэлемент (переводит фокус в поле ввода) \u0026lt;textbox\u0026gt;.\n         backspace(10) - сдвигает каретку на 10 символов влево (очищает текст в поле ввода).\n         %EXTERNAL_MESSAGE% - отправляет сообщение в поле ввода.\n       \n\n       ```\n\n- **`mandatory`**: Является ли локатор обязательным.  \n  Если `{mandatory: true}` и взаимодействие с веб-элементом невозможно, код выбросит ошибку. Если `mandatory: false`, элемент будет пропущен.\n\n- **`locator_description`**: Описание локатора.\n\n---\n\n### Сложные локаторы:\n\nВ ключи локатора можно передавать списки, кортежи или словари.\n\n#### Пример локатора со списками:\n\n```json\n\u0026quot;sample_locator\u0026quot;: {\n    \u0026quot;attribute\u0026quot;: [\n      null,\n      \u0026quot;href\u0026quot;\n    ],\n    \u0026quot;by\u0026quot;: [\n      \u0026quot;XPATH\u0026quot;,\n      \u0026quot;XPATH\u0026quot;\n    ],\n    \u0026quot;selector\u0026quot;: [\n      \u0026quot;//a[contains(@href, \u0026#39;#tab-description\u0026#39;)]\u0026quot;,\n      \u0026quot;//div[@id \u003d \u0026#39;tab-description\u0026#39;]//p\u0026quot;\n    ],\n    \u0026quot;timeout\u0026quot;: 0,\n    \u0026quot;timeout_for_event\u0026quot;: \u0026quot;presence_of_element_located\u0026quot;,\n    \u0026quot;event\u0026quot;: [\n      \u0026quot;click()\u0026quot;,\n      null\n    ],\n    \u0026quot;if_list\u0026quot;: \u0026quot;first\u0026quot;,\n    \u0026quot;use_mouse\u0026quot;: [\n      false,\n      false\n    ],\n    \u0026quot;mandatory\u0026quot;: [\n      true,\n      true\n    ],\n    \u0026quot;locator_description\u0026quot;: [\n      \u0026quot;Нажимаю на вкладку для открытия поля description.\u0026quot;,\n      \u0026quot;Читаю данные из div.\u0026quot;\n    ]\n  }\n```\nВ этом примере сначала будет найден элемент `//a[contains(@href, \u0026#39;#tab-description\u0026#39;)]`.  \nДрайвер выполнит команду `click()`, затем получит значение атрибута `href` элемента `//a[contains(@href, \u0026#39;#tab-description\u0026#39;)]`.\n\n#### Пример локатора со словарём:\n\n```json\n\u0026quot;sample_locator\u0026quot;: {\n  \u0026quot;attribute\u0026quot;: {\u0026quot;href\u0026quot;: \u0026quot;name\u0026quot;},\n  ...\n}\n```\n\n---\n\n### Описание ключей локатора:\n\n1. **`attribute`**:  \n   Этот ключ указывает на атрибут, который будет использован для поиска элемента. В данном случае значение `null`, что означает, что атрибут не используется для поиска.\n\n2. **`by`**:  \n   Указывает на метод поиска элемента на странице. В данном случае это `\u0026#39;XPATH\u0026#39;`, что означает использование XPath для нахождения элемента.\n\n3. **`selector`**:  \n   Это строка, представляющая локатор, который будет использоваться для нахождения элемента. В данном случае это XPath выражение `\u0026quot;//a[@id \u003d \u0026#39;mainpic\u0026#39;]//img\u0026quot;`, что означает поиск изображения внутри тега `a` с `id\u003d\u0026#39;mainpic\u0026#39;`.\n\n4. **`if_list`**:  \n   Указывает правило обработки списка элементов. В данном случае указано `\u0026#39;first\u0026#39;`, что означает, что если элементов несколько, то будет возвращен первый элемент из найденного списка.\n\n5. **`use_mouse`**:  \n   Булевое значение, которое указывает, нужно ли использовать мышь для взаимодействия с элементом. В данном случае установлено `false`, что значит, что мышь не используется.\n\n6. **`timeout`**:  \n   Время ожидания (в секундах) для нахождения элемента. В данном случае установлено значение `0`, что означает, что поиск элемента будет выполнен немедленно без ожид\n\nания.\n\n7. **`timeout_for_event`**:  \n   Время ожидания (в секундах) для события. В данном случае указано `\u0026quot;presence_of_element_located\u0026quot;`, что означает, что WebDriver будет ожидать появления элемента перед выполнением события.\n\n8. **`event`**:  \n   Указывает, какое событие должно быть выполнено с найденным элементом. Например, это может быть `click()`, чтобы кликнуть на элемент, или `screenshot()`, чтобы сделать скриншот элемента.\n\n9. **`mandatory`**:  \n   Указывает, является ли локатор обязательным. Если установлено значение `true`, то если элемент не будет найден или не удастся с ним взаимодействовать, будет вызвана ошибка.\n\n10. **`locator_description`**:  \n   Описание того, что делает локатор, чтобы помочь в понимании его цели.\n\n-----------------\n- Разметка страницы может меняться. Например десктопная/мобильная версии. В Таком случае я рекомендую держать несколько файлов локторов для каждой из версий.\nНапример: `product.json`,`product_mobile_site.json`\n\nПо умолчанию локаторы читаются из файла `product.json`. Вот как можно это изменить:\nВ файле грабера страницы поставщика делается проверка на `url`\n```python\n    async def grab_page(self) -\u0026gt; ProductFields:\n        ...\n         \u003d driver  \n        if \u0026#39;ksp.co.il/mob\u0026#39; in d.current_url: # \u0026lt;- бывет, что подключается к мобильной версии сайта\n            self.locator \u003d j_loads_ns(gs.path.src / \u0026#39;suppliers\u0026#39; / \u0026#39;ksp\u0026#39; / \u0026#39;locators\u0026#39; / \u0026#39;product_mobile_site.json\u0026#39;)\n        ...\n```\n\n"
      },
      "rowId": "72618863-E62D-459B-AAD2-35A87A901498"
    }],
    "rowsUsed": ["72618863-E62D-459B-AAD2-35A87A901498"]
  },
  "runSettings": {
    "temperature": 1.0,
    "model": "models/gemini-2.0-flash",
    "topP": 0.95,
    "topK": 40,
    "maxOutputTokens": 8192,
    "safetySettings": [{
      "category": "HARM_CATEGORY_HARASSMENT",
      "threshold": "OFF"
    }, {
      "category": "HARM_CATEGORY_HATE_SPEECH",
      "threshold": "OFF"
    }, {
      "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
      "threshold": "OFF"
    }, {
      "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
      "threshold": "OFF"
    }, {
      "category": "HARM_CATEGORY_CIVIC_INTEGRITY",
      "threshold": "OFF"
    }],
    "responseMimeType": "text/plain",
    "enableCodeExecution": false,
    "enableEnhancedCivicAnswers": true,
    "enableSearchAsATool": false,
    "enableBrowseAsATool": false,
    "enableAutoFunctionResponse": false
  },
  "testExamples": [{
    "inputBindings": {
      "9943B780-DD83-4653-951E-F59600194C3C": "что такое локатор html страницы?"
    },
    "modelResponses": [{
      "response": "Локатор веб-элемента на HTML-странице - это **способ определения и поиска определенного элемента на веб-странице** с использованием различных методов.  Он позволяет автоматизированным тестам и скриптам взаимодействовать с конкретными элементами, такими как кнопки, поля ввода, ссылки, текст и изображения.  \n\nДумайте о нем как об \"адресе\" или \"координатах\" элемента на веб-странице, используя которые программа может найти и \"кликнуть\" на кнопку, \"заполнить\" поле ввода и т.д.\n\nВ контексте автоматизации веб-тестирования и парсинга веб-страниц, локаторы позволяют скриптам надежно находить нужные элементы даже при изменении расположения элементов или других визуальных изменений на странице.\n\n**Основные характеристики и концепции:**\n\n*   **Стратегии поиска (By):** Определяют, как именно искать элемент.  Наиболее распространенные стратегии:\n    *   **ID:** Поиск по уникальному атрибуту `id` элемента.\n    *   **Name:** Поиск по атрибуту `name` элемента.\n    *   **Class Name:** Поиск по атрибуту `class` элемента.  Используется, когда элемент имеет определенный CSS-класс.\n    *   **Tag Name:** Поиск по типу HTML-тега (например, `div`, `p`, `a`, `input`).\n    *   **Link Text:** Поиск по полному тексту ссылки (тег `a`).\n    *   **Partial Link Text:** Поиск по части текста ссылки.\n    *   **CSS Selector:**  Использование CSS-селекторов для поиска элемента, как в CSS-стилях.\n    *   **XPath:** Использование XPath-выражений для поиска элемента, позволяя сложные и гибкие запросы по структуре HTML-документа.\n\n*   **Селектор (Selector):** Фактическое значение, используемое выбранной стратегией поиска для определения элемента. Например:\n    *   `id \u003d \"submit_button\"` (ID)\n    *   `name \u003d \"username\"` (Name)\n    *   `class \u003d \"error_message\"` (Class Name)\n    *   `//div[@class\u003d\u0027product\u0027]/h2/a` (XPath) - ищет ссылку в h2 внутри div с классом product\n\n*   **Атрибут (Attribute):**  После нахождения элемента, можно получить значение определенного атрибута этого элемента (например, `href` для ссылки, `src` для изображения, `innerText` для текста).\n\n*   **Действия (Event):**  Можно выполнить действие с найденным элементом, например, `click()`, `send_keys(\"текст\")`.\n\n**Примеры:**\n\nПредположим, у вас есть следующий HTML:\n\n```html\n\u003cinput type\u003d\"text\" id\u003d\"username\" name\u003d\"username\" class\u003d\"input-field\"\u003e\n\u003cbutton id\u003d\"submit_button\"\u003eSubmit\u003c/button\u003e\n\u003ca href\u003d\"https://example.com\"\u003eExample Link\u003c/a\u003e\n```\n\nВот несколько примеров локаторов для этих элементов:\n\n*   **Поле ввода \"username\":**\n    *   `By.ID, \"username\"`  (Стратегия: ID, Селектор: \"username\")\n    *   `By.NAME, \"username\"` (Стратегия: Name, Селектор: \"username\")\n    *   `By.CLASS_NAME, \"input-field\"` (Стратегия: Class Name, Селектор: \"input-field\")\n    *   `By.XPATH, \"//input[@id\u003d\u0027username\u0027]\"` (Стратегия: XPath, Селектор: \"//input[@id\u003d\u0027username\u0027]\")\n    *   `By.CSS_SELECTOR, \"input#username\"` (Стратегия: CSS Selector, Селектор: \"input#username\")\n*   **Кнопка \"Submit\":**\n    *   `By.ID, \"submit_button\"` (Стратегия: ID, Селектор: \"submit_button\")\n    *   `By.XPATH, \"//button[@id\u003d\u0027submit_button\u0027]\"` (Стратегия: XPath, Селектор: \"//button[@id\u003d\u0027submit_button\u0027]\")\n*   **Ссылка \"Example Link\":**\n    *   `By.LINK_TEXT, \"Example Link\"` (Стратегия: Link Text, Селектор: \"Example Link\")\n    *   `By.PARTIAL_LINK_TEXT, \"Example\"` (Стратегия: Partial Link Text, Селектор: \"Example\")\n    *   `By.XPATH, \"//a[@href\u003d\u0027https://example.com\u0027]\"` (Стратегия: XPath, Селектор: \"//a[@href\u003d\u0027https://example.com\u0027]\")\n\n**Важность выбора локатора:**\n\nВыбор правильного локатора критичен для стабильности и надежности автоматизированных тестов.  Ненадежные локаторы (например, основанные на хрупкой структуре HTML) могут приводить к ложным срабатываниям тестов, когда небольшие изменения в HTML ломают локатор.  Поэтому рекомендуется использовать наиболее устойчивые и однозначные локаторы, такие как ID (если он уникален и стабилен) или хорошо продуманные XPath/CSS-селекторы.\n"
    }]
  }]
}